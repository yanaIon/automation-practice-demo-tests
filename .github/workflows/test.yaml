#name: Test
#
#on: workflow_dispatch
#
#jobs:
#  test:
#    # где заускаем
#    runs-on: ubuntu-latest
#    # что делаем
#    steps:
#      # выкачиваем репозиторий
#      - uses: actions/checkout@v3
#      # настраиваем java
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#      - uses: Xotabu4/selenoid-github-action@v2
#      # запускаем тесты
#      - run: ./gradlew clean test -Dselenide.remote=http://localhost:4444/wd/hub
#      # скачиваем историю тестов
#      - uses: actions/checkout@v2
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages
#      # генерируем отчет
#      - uses: simple-elf/allure-report-action@master
#        if: always()
#        with:
#          gh_pages: gh-pages
#          allure_results: build/allure-results
#          allure_report: allure-report
#          allure_history: allure-history
#      # публикуем отчет
#      - uses: peaceiris/actions-gh-pages@v2
#        if: always()
#        env:
#          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PUBLISH_BRANCH: gh-pages
#          PUBLISH_DIR: allure-history


name: Test

on:
  workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout репозиторий
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Настройка Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. Установка Selenoid
      - name: Start Selenoid
        uses: Xotabu4/selenoid-github-action@v2

      # 4. Запуск тестов
      - name: Run Tests
        run: ./gradlew clean test -Dselenide.remote=http://localhost:4444/wd/hub

      # 5. Проверка содержимого allure-results
      - name: Check allure-results
        run: ls -la build/allure-results

      # 6. Клонирование ветки gh-pages для истории
      - name: Checkout gh-pages
        uses: actions/checkout@v2
        if: always()
        with:
          ref: gh-pages
          path: gh-pages

      # 7. Перенос истории из gh-pages
      - name: Copy Allure History
        run: |
          mkdir -p allure-history
          cp -R gh-pages/allure-history/* allure-history/ || true

      # 8. Установка Allure CLI
      - name: Install Allure
        run: |
          curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.zip
          unzip allure.zip -d allure-cli
          export PATH=$PATH:${{ github.workspace }}/allure-cli/bin

      # 9. Генерация Allure-отчета
      - name: Generate Allure Report
        run: allure generate build/allure-results --clean -o allure-report

      # 10. Проверка содержимого allure-report
      - name: Check allure-report
        run: ls -la allure-report

      # 11. Публикация отчета на GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish_branch: gh-pages
          publish_dir: allure-report
